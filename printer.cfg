# MKS Nano V3 By：zzcat
#make menuconfig--STM32F407--48KiB bootloader--8MHZ--USB(PA11/PA12)
# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.
[stepper_a]
step_pin: PE3
dir_pin: PE2  #加"!"控制电机正反转
enable_pin: !PE4
microsteps: 16
rotation_distance: 40   ##rotation_distance = ((360°/1.8°) * microsteps) / 80 # # 旋转距离 = （圆周360°/步距角）*细分/每MM脉冲值
endstop_pin: PA15 #X-Min, PE4:X-Max
#position_endstop: 336
homing_speed: 40
#arm_length = 315

[stepper_b]
step_pin: PE0
dir_pin: PB9   #加"!"控制电机正反转
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PD2  #Y-Min, PJ0:Y-Max
#position_endstop: 336
#arm_length = 315

[stepper_c]
step_pin: PB5
dir_pin: PB4   #加"!"控制电机正反转
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
endstop_pin: PC4  #Z-Min, PD2:Z-Max
#position_endstop: 336
#arm_length = 315

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 7.750
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: -5
max_temp: 275
#pressure_advance: 0.4
#control = pid
#pid_kp = 18.240
#pid_ki = 0.558
#pid_kd = 149.109
max_extrude_cross_section: 110 
max_extrude_only_distance: 1100

#[extruder1]
#step_pin: PC1
#dir_pin: !PC3
#enable_pin: !PC7
#heater_pin: PH4
#sensor_pin: PK7
#...

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
min_temp: 0
max_temp: 115
#control = pid
#pid_kp = 71.041
#pid_ki = 1.422
#pid_kd = 887.123



[input_shaper]
shaper_freq_x: 25.00  # frequency for the X mark of the test model
shaper_freq_y: 23.29  # frequency for the Y mark of the test model

[mcu]
#ls /dev/serial/by-id/*
serial: /dev/serial/by-path/platform-5200000.ehci1-controller-usb-0:1.4:1.0

#[temperature_sensor raspberry_pi] #pi的温度
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[temperature_sensor mcu_temp] #主板的温度
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

[printer]
kinematics: delta
max_velocity: 300 #最大打印速度
max_accel: 4000 #最大加速度
max_accel_to_decel: 2000  #最大加速度到减速度
square_corner_velocity: 5 #直角速度
max_z_velocity: 300 #最大Z速度
#delta_radius: 151.7
print_radius: 132
minimum_z_position=-5 #最小Z高度

[virtual_sdcard]
path: ~/gcode_files

[delta_calibrate]
radius: 120
horizontal_move_z: 25
Speed: 10

[fan]
pin: PC14

[heater_fan heat_sink_fan]
pin: PB0

[probe]  #相当于G33
pin: !PC8
x_offset: 0.5  #调平开关的偏移量
y_offset: -2
#z_offset: 16.88  #调平开关与喷准之间的Z高度
speed: 10  #速度
samples: 3 #点几下
samples_result: average  #平均
sample_retract_dist: 3 #探点上下的距离
samples_tolerance: 0.02 #精度，容忍度 要到0.02才可以
samples_tolerance_retries: 5 #重复的次数

[bed_mesh]  #相当于G29
speed: 50 #速度
horizontal_move_z: 25 #抬升高度？
mesh_radius: 120  #调平半径
mesh_origin: 0,0  #原点
round_probe_count: 7 #点数7*7的网格
algorithm: bicubic

[filament_switch_sensor filament_sensor]  #断料检测
pause_on_runout: True
runout_gcode: PAUSE #没耗材执行动作
switch_pin: PA4

[firmware_retraction] # make sure to enable this in slicer. cura printer settings addon is required to hit the check box. every other slicer should have it in settings tab. this allows live adjustments or ability to fix a mistake without canceling. 
retract_length: 6.5
retract_speed: 40
unretract_extra_length: 0
unretract_speed: 40

[pause_resume]

[gcode_arcs]

[save_variables]
filename: ~/savedVariables1.cfg

########################################
# Macro's
########################################

[include macros/*.cfg]

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_a]
uart_pin: PD5
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PE5      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60   # 255 is most sensitive value, 0 is least sensitiv      # Set to MCU pin connected to TMC DIAG pin


[tmc2209 stepper_b]
uart_pin: PD7
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PJ1      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 stepper_c]
uart_pin: PD4
#interpolate: True
run_current: 1.138
hold_current: 0.5
#sense_resistor: 0.110
stealthchop_threshold: 999999
#diag_pin: ^PD2     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 extruder]
uart_pin: PD9
#interpolate: True
run_current: 1.1
hold_current: 0.5
#sense_resistor: 0.110
stealthchop_threshold: 999999

#[tmc2209 stepper_e1]
#uart_pin: PB6
##interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


# Enables the ENDSTOP_PHASE_CALIBRATE command.
[endstop_phase]

[endstop_phase stepper_a]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase:
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
endstop_align_zero: false
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

[endstop_phase stepper_b]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase:
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
endstop_align_zero: false
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

[endstop_phase stepper_c]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase:
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
endstop_align_zero: false 
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0,  EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
# See the MKS Lcd Config path file for definitions of common LCD displays.
#[include mks_lcd_12864.cfg]




[display_status]

#[bltouch]
#sensor_pin: ^PD2
#control_pin:PB5
#x_offset: -44
#y_offset: -14
#z_offset: 3.099
#speed: 10.0
#samples: 2
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.1
#samples_tolerance_retries: 1

#[safe_z_home]
#home_xy_position: 100,100 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5


#[gcode_macro G29]
#gcode:
#    BED_MESH_CLEAR
#    G28
#    BED_MESH_CALIBRATE
#    BED_MESH_PROFILE SAVE=name
#    SAVE_CONFIG
#    BED_MESH_PROFILE LOAD=name

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.138628, -0.138628, -0.138628, -0.138628, -0.138628, -0.138628, -0.138628
#*# 	-0.079250, -0.079250, -0.086295, -0.100586, -0.134963, -0.089109, -0.089109
#*# 	-0.026424, -0.026424, -0.012563, -0.050449, -0.066249, -0.023764, -0.023764
#*# 	0.047652, 0.041637, 0.015971, -0.013233, -0.010985, 0.061359, 0.262124
#*# 	0.085112, 0.085112, 0.046472, 0.010140, 0.043041, 0.205023, 0.205023
#*# 	0.033756, 0.033756, 0.033470, 0.035767, 0.103236, 0.293218, 0.293218
#*# 	0.000694, 0.000694, 0.000694, 0.000694, 0.000694, 0.000694, 0.000694
#*# tension = 0.2
#*# min_x = -120.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -120.0
#*# x_count = 7
#*# max_y = 120.0
#*# mesh_x_pps = 2
#*# max_x = 120.0
#*#
#*# [printer]
#*# delta_radius = 151.931727
#*#
#*# [stepper_a]
#*# angle = 209.825714
#*# arm_length = 315.000000
#*# position_endstop = 338.768282
#*#
#*# [stepper_b]
#*# angle = 329.541817
#*# arm_length = 315.000000
#*# position_endstop = 337.669147
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 315.000000
#*# position_endstop = 337.688202
#*#
#*# [probe]
#*# z_offset = 18.022
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.708
#*# pid_ki = 1.920
#*# pid_kd = 669.572
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.993
#*# pid_ki = 0.843
#*# pid_kd = 130.683
#*#
#*# [endstop_phase stepper_a]
#*# trigger_phase = 13/64
#*#
#*# [endstop_phase stepper_b]
#*# trigger_phase = 27/64
#*#
#*# [endstop_phase stepper_c]
#*# trigger_phase = 43/64
#*#
#*# [delta_calibrate]
#*# height0 = 18.022
#*# height0_pos = 25660.333,25573.000,25574.333
#*# height1 = 18.022
#*# height1_pos = 30588.000,30563.000,22628.333
#*# height2 = 18.022
#*# height2_pos = 24961.667,33404.000,24888.000
#*# height3 = 18.022
#*# height3_pos = 22857.000,29681.333,29720.667
#*# height4 = 18.022
#*# height4_pos = 24864.667,24743.000,30959.667
#*# height5 = 18.022
#*# height5_pos = 29095.667,22941.333,28997.000
#*# height6 = 18.022
#*# height6_pos = 32170.000,24816.000,24789.000
